// Code generated by protoc-gen-go.
// source: Meal.proto
// DO NOT EDIT!

package schema

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Stars int32

const (
	Stars_ONE   Stars = 1
	Stars_TWO   Stars = 2
	Stars_THREE Stars = 3
	Stars_FOUR  Stars = 4
	Stars_FIVE  Stars = 5
)

var Stars_name = map[int32]string{
	1: "ONE",
	2: "TWO",
	3: "THREE",
	4: "FOUR",
	5: "FIVE",
}
var Stars_value = map[string]int32{
	"ONE":   1,
	"TWO":   2,
	"THREE": 3,
	"FOUR":  4,
	"FIVE":  5,
}

func (x Stars) Enum() *Stars {
	p := new(Stars)
	*p = x
	return p
}
func (x Stars) String() string {
	return proto.EnumName(Stars_name, int32(x))
}
func (x Stars) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *Stars) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Stars_value, data, "Stars")
	if err != nil {
		return err
	}
	*x = Stars(value)
	return nil
}

type Meal struct {
	Name             *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Ingredients      []string `protobuf:"bytes,2,rep,name=ingredients" json:"ingredients,omitempty"`
	Price            *float32 `protobuf:"fixed32,3,opt,name=price" json:"price,omitempty"`
	Rating           *Stars   `protobuf:"varint,4,opt,name=rating,enum=schema.Stars" json:"rating,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Meal) Reset()         { *m = Meal{} }
func (m *Meal) String() string { return proto.CompactTextString(m) }
func (*Meal) ProtoMessage()    {}

func (m *Meal) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Meal) GetIngredients() []string {
	if m != nil {
		return m.Ingredients
	}
	return nil
}

func (m *Meal) GetPrice() float32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *Meal) GetRating() Stars {
	if m != nil && m.Rating != nil {
		return *m.Rating
	}
	return 0
}

func init() {
	proto.RegisterEnum("schema.Stars", Stars_name, Stars_value)
}
